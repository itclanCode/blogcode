(window.webpackJsonp=window.webpackJsonp||[]).push([[374],{2031:function(t,a,v){"use strict";v.r(a);var _=v(12),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"设计模式是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设计模式是什么"}},[t._v("#")]),t._v(" 设计模式是什么")]),t._v(" "),v("h2",{attrs:{id:"快速导航"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#快速导航"}},[t._v("#")]),t._v(" 快速导航")]),t._v(" "),v("TOC"),t._v(" "),v("h2",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),v("p",[t._v("设计模式是一个非常抽象的概念,反正写了这些年的代码,自己也知道一些设计模式,但是要真正把它用到生产,实际代码中,发现有一定的距离,脑子都是糊的")]),t._v(" "),v("p",[t._v("为了更深的理解设计模式,有必要系统性的去学习一下的,在往后的项目中,更多的想到,利用到生产坏境当中去的")]),t._v(" "),v("h2",{attrs:{id:"什么时设计模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么时设计模式"}},[t._v("#")]),t._v(" 什么时设计模式")]),t._v(" "),v("p",[t._v("使用设计模式,可使代码保持合理的组织并易于理解,提高代码的可维护性,并增加代码的精简程度")]),t._v(" "),v("p",[t._v("使用设计模式的要诀是要把他们看做编程工具箱中的多种工具,每一种设计模式都有一个特定的用途")]),t._v(" "),v("p",[t._v("在尝试应用设计模式至代码前,要熟悉各种现有的设计模式以及每一种应用场合,如果应用错误了的工具,将会导致不必要的麻烦和时间上的浪费")]),t._v(" "),v("p",[t._v("如果不是一个老练的 javaScript 开发者,否则在开始为应用程序编写代码时头脑中是没有特定的设计模式的")]),t._v(" "),v("p",[t._v("随着代码的不断积累,会发现将代码进行改变以以便日后开发更易于管理,同时还要对代码库中的文件按照一定的结构规律进行整理")]),t._v(" "),v("p",[t._v("其实这个过程被称为重构")]),t._v(" "),v("p",[t._v("通常,就是在开发的此阶段要考虑应用特定的设计模式或架构模式至代码,以简化后续的开发工作")]),t._v(" "),v("p",[t._v("一定要谨慎对待那些使用某种特定的预建的 javaScript 框架人员,除非特别有经验专业人员,不然,这等同于在能识别出问题所需要使用的工具之前就直接选用一种全新的没有使用经验的工具")]),t._v(" "),v("p",[t._v("这是有风险的,代码是不断的在积累的,不断的识别出代码所需要的应用特定模式,进而改进代码的可维护性,并在某种情况下提高运行效率")]),t._v(" "),v("p",[t._v("言归正传,设计模式:是前人经过尝试和测试,通过验证的代码编写和组织的方法,通过为开发者提供清晰的结构,移除不必要的复杂性,并将大型代码库中不同的部分连接进行解耦,使得代码更易于理解,易于维护")]),t._v(" "),v("h2",{attrs:{id:"结论"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),v("p",[t._v("设计模式并不是固定的,是在前人的经验积累下,总结出来的一种特定的方案,用来解决某一种场景下的问题")]),t._v(" "),v("p",[t._v("它是一种经过验证的代码编写和组织方法,能够为开发者提供清晰的结构,移除不必要的复杂性,更好的组织和管理我们的项目代码,达到低耦合,高内聚的目的")]),t._v(" "),v("footer-FooterLink",{attrs:{isShareLink:!0,isDaShang:!0}}),t._v(" "),v("footer-FeedBack")],1)}),[],!1,null,null,null);a.default=r.exports}}]);