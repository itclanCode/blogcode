(window.webpackJsonp=window.webpackJsonp||[]).push([[197],{1086:function(t,s,a){t.exports=a.p+"assets/img/01-guide.c70dcfff.jpg"},1087:function(t,s,a){t.exports=a.p+"assets/img/02-react-redux.aede3691.jpg"},1926:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"react-redux-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-redux-的使用"}},[t._v("#")]),t._v(" react-redux 的使用")]),t._v(" "),n("h2",{attrs:{id:"快速导航"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速导航"}},[t._v("#")]),t._v(" 快速导航")]),t._v(" "),n("TOC"),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("您将在本文当中学习到")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("react-redux")]),t._v("是什么,解决什么问题")]),t._v(" "),n("li",[n("code",[t._v("UI")]),t._v("组件以及容器组件")]),t._v(" "),n("li",[n("code",[t._v("react-redux")]),t._v("中两个重要的"),n("code",[t._v("API")]),t._v(",``Provider"),n("code",[t._v("以及")]),t._v("connect`")]),t._v(" "),n("li",[n("code",[t._v("mapStateToProps")]),t._v("以及"),n("code",[t._v("mapDispatchToProps")]),t._v("等的学习")])]),t._v(" "),n("p",[t._v("是不是搞不清楚"),n("code",[t._v("React")]),t._v("与"),n("code",[t._v("Redux")]),t._v(",以及"),n("code",[t._v("React-Redux")]),t._v("的关系?是不是不清楚"),n("code",[t._v("mapStateToProps")]),t._v("以及"),n("code",[t._v("mapDispatchToProps")]),t._v("的使用?")]),t._v(" "),n("p",[t._v("那么本文就是你想要知道的")]),t._v(" "),n("div",{attrs:{align:"center"}},[n("img",{staticClass:"medium-zoom lazy",attrs:{loading:"lazy",src:a(1086),alt:"todolist"}})]),t._v(" "),n("h2",{attrs:{id:"react-redux-是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-redux-是什么"}},[t._v("#")]),t._v(" react-redux 是什么")]),t._v(" "),n("p",[t._v("以下是上节内容的代码结构,完成的一个"),n("code",[t._v("todolist")]),t._v(",并对"),n("code",[t._v("Redux")]),t._v("进行了拆分,按功能模块化管理")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("├─"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gitignore\n├─"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("lock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n├─"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n├─"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md\n├─yarn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log\n├─yarn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lock\n├─src                              "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 源代码主要目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ├─index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 入口文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ├─views                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 视图")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   └TodoList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ├─store                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Redux中store组件的公共数据状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   ├─actionCreators"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// action创建者")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   ├─actionTypes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// actionTypes的类型,定义成常量")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   ├─index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建store的主文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   └reducer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建的reducer")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  ├─components             "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UI组件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     └TodoListUI"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n├─"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   ├─favicon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ico\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   ├─index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   └manifest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br")])]),n("p",[n("strong",[n("code",[t._v("Redux")])]),t._v(": 是一个用于管理组件公共状态的一个可预测状态的框架,集中管理组件的状态.核心在于"),n("code",[t._v("store")]),t._v(",它提供了"),n("code",[t._v("dispatch")]),t._v(","),n("code",[t._v("getState")]),t._v(","),n("code",[t._v("subscribe")]),t._v("方法,理解"),n("code",[t._v("Redux")]),t._v("的工作流程很重要")]),t._v(" "),n("div",{attrs:{align:"center"}},[n("img",{staticClass:"medium-zoom lazy",attrs:{loading:"lazy",src:a(1087),alt:"todolist"}})]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("react-redux")]),t._v(": 它是"),n("code",[t._v("redux")]),t._v("作者封装的一个库,是一个第三方的模块,对"),n("code",[t._v("Redux")]),t._v("进一步的封装简化,提供了一些额外的 API(例如:"),n("code",[t._v("Provider")]),t._v(","),n("code",[t._v("connect")]),t._v("等),使用它可以更好的组织和管理我们的代码,遵循一定的组件拆分规范,在"),n("code",[t._v("React")]),t._v("中更方便的使用"),n("code",[t._v("Redux")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("关系")]),t._v(": 它不是必须的,在实际项目中,可选用.是使用"),n("code",[t._v("Redux")]),t._v("还是使用"),n("code",[t._v("react-redux")]),t._v(",取决于你自己,项目组成员的熟悉程度,适合自己的才是最好的,使用后者提供了一些便利,但需要额外的掌握一些"),n("code",[t._v("API")]),t._v("的使用")])])]),t._v(" "),n("p",[t._v("如果只是使用"),n("code",[t._v("Redux")]),t._v(",那么流程是这样的:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("component")]),t._v("--\x3e"),n("code",[t._v("dispatch(action)")]),t._v("--\x3e"),n("code",[t._v("reducer")]),t._v("--\x3e"),n("code",[t._v("subscribe")]),t._v("--\x3e"),n("code",[t._v("getState")]),t._v("--\x3e"),n("code",[t._v("component")]),t._v(" 这在前几篇的内容,一直都是遵循这个流程")])]),t._v(" "),n("p",[t._v("如果使用"),n("code",[t._v("react-redux")]),t._v(",那么流程是这样的:\n"),n("code",[t._v("component")]),t._v("--\x3e"),n("code",[t._v("actionCreator(data)")]),t._v("--\x3e"),n("code",[t._v("reducer")]),t._v("--\x3e"),n("code",[t._v("component")])]),t._v(" "),n("p",[t._v("在上几节内容中,我们将"),n("code",[t._v("todolist")]),t._v("的组件进行了拆分,拆分成"),n("code",[t._v("UI")]),t._v("组件(无状态组件)和容器组件,将"),n("code",[t._v("Reudcer")]),t._v("按照各个职责进行管理")]),t._v(" "),n("p",[t._v("虽然已经做了简化,但是想更进一步更好的组织我们的代码,那么可以使用 react-redux,当你使用了它之后,你不需要手动的写"),n("code",[t._v("dispatch")]),t._v(","),n("code",[t._v("subscribe")]),t._v(",以及"),n("code",[t._v("getState")]),t._v("了")]),t._v(" "),n("p",[t._v("因为它对内输入的逻辑(即外部的数据（即"),n("code",[t._v("state")]),t._v("对象）如何转换为 "),n("code",[t._v("UI")]),t._v(" 组件的参数,通过"),n("code",[t._v("mapStateToProps")]),t._v("),对外输出逻辑(即用户发出的动作如何变为 "),n("code",[t._v("Action")]),t._v(" 对象，从 "),n("code",[t._v("UI")]),t._v(" 组件传出去,通过"),n("code",[t._v("mapDispatchToProps")]),t._v(")")]),t._v(" "),n("p",[n("code",[t._v("react-redux")]),t._v("帮我们做了监听,获取"),n("code",[t._v("state")]),t._v("等工作,同时它提供了两个好用的"),n("code",[t._v("API")]),t._v(","),n("code",[t._v("Provider")]),t._v("和"),n("code",[t._v("connect")]),t._v(",在下文中我们会学习到的")]),t._v(" "),n("h2",{attrs:{id:"安装-react-redux"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-react-redux"}},[t._v("#")]),t._v(" 安装 react-redux")]),t._v(" "),n("p",[t._v("既然是一个第三方的模块,那么可以通过"),n("code",[t._v("npm")]),t._v("或者"),n("code",[t._v("yarn")]),t._v("的方式下载")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("npm install "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save react"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("redux\n或\nyarn add react"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("redux\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("p",[t._v("安装完成后,可以在根目录的"),n("code",[t._v("package.json")]),t._v("中查看是否有的")]),t._v(" "),n("p",[t._v("对于理解 "),n("code",[t._v("react-redux")]),t._v("中的 "),n("code",[t._v("Provider")]),t._v("和"),n("code",[t._v("connect")]),t._v(",有必要再次回顾一下之前学过的 UI 组件和容器组件")]),t._v(" "),n("h2",{attrs:{id:"ui-组件-傻瓜组件-无状态组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ui-组件-傻瓜组件-无状态组件"}},[t._v("#")]),t._v(" UI 组件(傻瓜组件/无状态组件)")]),t._v(" "),n("p",[t._v("既然是一个第三方的模块,那么可以通过 npm 或者 yarn 的方式下载")]),t._v(" "),n("p",[n("code",[t._v("react-redux")]),t._v("将所有组件分成两大类："),n("code",[t._v("UI")]),t._v(" 组件（"),n("code",[t._v("presentational component")]),t._v("）和容器组件（"),n("code",[t._v("container component")]),t._v("）\n"),n("code",[t._v("UI")]),t._v(" 组件有以下几个特征")]),t._v(" "),n("ul",[n("li",[t._v("只负责 "),n("code",[t._v("UI")]),t._v(" 的呈现，不带有任何业务逻辑,")]),t._v(" "),n("li",[t._v("没有状态,"),n("code",[t._v("UI")]),t._v("的渲染通过外部的"),n("code",[t._v("props")]),t._v("传入（即不使用"),n("code",[t._v("this.state")]),t._v("这个变量)")]),t._v(" "),n("li",[t._v("所有数据都由参数（"),n("code",[t._v("this.props")]),t._v("）对象提供")]),t._v(" "),n("li",[t._v("不使用任何 "),n("code",[t._v("Redux")]),t._v(" 的 "),n("code",[t._v("API")]),t._v("\n如下所示, UI 组件的例子")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Counter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br")])]),n("p",[t._v("因为不含有状态"),n("code",[t._v("state")]),t._v("，"),n("code",[t._v("UI")]),t._v(' 组件又称为"纯组件"，即它纯函数一样，输出的结果纯粹由参数决定它的值,给定的输入,便会有指定的输出,与'),n("code",[t._v("UI = render(data)")]),t._v("完全吻合")]),t._v(" "),n("h2",{attrs:{id:"容器组件-聪明组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器组件-聪明组件"}},[t._v("#")]),t._v(" 容器组件(聪明组件)")]),t._v(" "),n("p",[t._v("容器组件的特征与 UI 组件相反")]),t._v(" "),n("ul",[n("li",[t._v("负责管理数据和业务逻辑，不负责 "),n("code",[t._v("UI")]),t._v(" 的呈现")]),t._v(" "),n("li",[t._v("带有内部状态("),n("code",[t._v("state")]),t._v("）")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("Redux")]),t._v(" 的 API(下面会有具体的例子),比如:"),n("code",[t._v("dispatch")]),t._v(","),n("code",[t._v("getState")]),t._v(","),n("code",[t._v("subscribe")]),t._v("等")])]),t._v(" "),n("p",[t._v("总之："),n("strong",[t._v("UI 组件负责 UI 的呈现，容器组件负责管理数据和逻辑")])]),t._v(" "),n("p",[t._v("如果一个组件既有 "),n("code",[t._v("UI")]),t._v(" 又有业务逻辑，那怎么办？可以将它拆分成下面的结构：外面是一个容器组件，里面包了一个"),n("code",[t._v("UI")]),t._v(" 组件。前者负责与外部的通信，将数据传给后者，由后者渲染出视图。")]),t._v(" "),n("p",[t._v("这也是之前我们将"),n("code",[t._v("todolist")]),t._v("组件进行了容器组件和"),n("code",[t._v("UI")]),t._v("组件不断的拆分的方式.当然这种拆分因人而异,没有绝对的,太细粒度的拆分也会带来管理上的麻烦.不能为了拆分而拆分.")]),t._v(" "),n("p",[t._v("而 "),n("code",[t._v("react-redux")]),t._v("规定，所有的 "),n("code",[t._v("UI")]),t._v(" 组件都由用户提供，容器组件则是由 "),n("code",[t._v("react-redux")]),t._v("自动生成(下面的"),n("code",[t._v("connect")]),t._v("方法返回的结果就是容器组件)。也就是说，用户负责视觉层，状态管理则是全部交给它")]),t._v(" "),n("h2",{attrs:{id:"provider"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#provider"}},[t._v("#")]),t._v(" Provider")]),t._v(" "),n("p",[n("strong",[t._v("作用")]),t._v(": 它是一个组件,用于连接了"),n("code",[t._v("Store")]),t._v(",它把"),n("code",[t._v("store")]),t._v("提供给内部组件,接受"),n("code",[t._v("store")]),t._v("作为"),n("code",[t._v("props")]),t._v(",然后通过"),n("code",[t._v("context")]),t._v("往下传，这样"),n("code",[t._v("react")]),t._v("中任何组件都可以通过"),n("code",[t._v("context")]),t._v("获取"),n("code",[t._v("store")])]),t._v(" "),n("p",[t._v("只要被这个 "),n("code",[t._v("Provider")]),t._v("组件包裹了,那么它内部的子组件就有能力接收到"),n("code",[t._v("store")]),t._v("，内部的组件都有能力获取"),n("code",[t._v("store")]),t._v("的数据的")]),t._v(" "),n("p",[t._v("这样也就意味着我们可以在任何一个组件里利用 "),n("code",[t._v("dispatch(action)")]),t._v("来触发 "),n("code",[t._v("reducer")]),t._v("改变 "),n("code",[t._v("state")]),t._v("，并用 "),n("code",[t._v("subscribe")]),t._v("监听 "),n("code",[t._v("state")]),t._v("的变化，然后通过 "),n("code",[t._v("getState")]),t._v("来获取变化后的值。但是官方并不推荐这样做，它只会让数据流变的混乱，过度的耦合也会影响组件的复用，维护起来会更麻烦")]),t._v(" "),n("p",[n("strong",[n("code",[t._v("Provider")]),t._v("其实是对"),n("code",[t._v("Redux")]),t._v("中的"),n("code",[t._v("store")]),t._v("的"),n("code",[t._v("subscribe")]),t._v(","),n("code",[t._v("dispatch")]),t._v(","),n("code",[t._v("getState")]),t._v("的一个封装,集成.它对外暴露"),n("code",[t._v("props")]),t._v("属性,内部却已经帮我们实现了的"),n("code",[t._v("react-redux")]),t._v("提供 "),n("code",[t._v("Provider")]),t._v("组件，可以让容器组件拿到"),n("code",[t._v("state")])]),t._v("\n例如如下代码:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ReactDOM "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" TodoList "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./TodoList'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Provider "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-redux'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从react-redux库中引入Provider")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" store "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./store'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入store")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" container "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nReactDOM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Provider store"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过属性props的方式将store赋值给store,这样Provider组件就能接收到store中的数据,其内部的组件也可以拿到store中的状态")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TodoList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Provider"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  container\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("p",[t._v("如果为了代码更好看点,也可以这样,定义一个变量的,以下这种写法与上面是等价的,"),n("code",[t._v("JSX")]),t._v("的内容可以看以前的内容")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" App "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Provider store"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TodoList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Provider"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" container "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nReactDOM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("p",[t._v("这里需要注意的是:当你使用"),n("code",[t._v("React-Router")]),t._v(" 路由库时,与其他项目没有不同之处，也是使用"),n("code",[t._v("Provider")]),t._v("在"),n("code",[t._v("Router")]),t._v("外面包一层，因为"),n("code",[t._v("Provider")]),t._v("的唯一功能就是传入"),n("code",[t._v("store")]),t._v("对象\n如果不这样包裹着:内部的组件时接收不到"),n("code",[t._v("store")]),t._v("中的状态数据的,如下所示")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Provider store"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Router"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Route path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),t._v(" component"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("App"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Router"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Provider"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h2",{attrs:{id:"connect"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#connect"}},[t._v("#")]),t._v(" connect")]),t._v(" "),n("p",[n("strong",[t._v("作用")]),t._v(":"),n("code",[t._v("connect")]),t._v("顾名思义,是一个连接器,"),n("strong",[t._v("它是连接容器组件和 UI(傻瓜)组件的")]),t._v(",它是 "),n("code",[t._v("react-redux")]),t._v("提供的一个方法,"),n("strong",[t._v("用于从 UI 组件生成容器组件,把两种组件给连接起来")])]),t._v(" "),n("p",[n("code",[t._v("connect")]),t._v("方法接收四个参数,一个是 "),n("code",[t._v("mapStateToProps")]),t._v(",另一个是"),n("code",[t._v("mapDispatchToProps")]),t._v(",当然还有两个参数: "),n("code",[t._v("mergeProps")]),t._v(", "),n("code",[t._v("options")]),t._v(",它们是可选的,它执行的结果依然是一个函数,所以才可以在后面在加上一个圆括号的,而圆括号内又接收一个参数,即是 UI 组件,也是傻瓜组件")]),t._v(" "),n("p",[t._v("有两次 "),n("code",[t._v("connect")]),t._v("的执行,第一次 "),n("code",[t._v("connect")]),t._v("函数的执行是从"),n("code",[t._v("react-redux")]),t._v("库中引入这个方法,第二次是把 "),n("code",[t._v("connect")]),t._v("函数返回的函数再次执行,最后产生的就是容器组件,如下代码所示")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" connect "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-redux'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" VisibleTodoList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TodoList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名成ContainerTodoList也是一样的")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("如果不给"),n("code",[t._v("connect")]),t._v("传递任何参数,可以为空,也可以指定参数"),n("code",[t._v("null")]),t._v(",或者只有"),n("code",[t._v("mapStateToProps")]),t._v(",没有"),n("code",[t._v("mapDispatchToProps")]),t._v(",这也是没有什么问题的,如下代码所示")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" connect "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-redux'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" VisibleTodoList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapStateToProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TodoList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("在上面代码中，"),n("code",[t._v("TodoList")]),t._v("就是"),n("code",[t._v("UI")]),t._v("组件，而"),n("code",[t._v("VisibleTodoList")]),t._v("就是由 "),n("code",[t._v("React-Redux")]),t._v("通过"),n("code",[t._v("connect")]),t._v("方法自动生成的容器组件。\n但是，因为没有定义业务逻辑，上面这个容器组件毫无意义，只是 "),n("code",[t._v("UI")]),t._v("组件的一个单纯的包装层。为了定义业务逻辑，需要给出下面两方面的信息。")]),t._v(" "),n("ul",[n("li",[t._v("输入逻辑：外部的数据（即"),n("code",[t._v("state")]),t._v("对象）如何转换为 "),n("code",[t._v("UI")]),t._v(" 组件的参数(负责接收"),n("code",[t._v("state")]),t._v(")")]),t._v(" "),n("li",[t._v("输出逻辑：用户发出的动作如何变为 "),n("code",[t._v("Action")]),t._v(" 对象，从 "),n("code",[t._v("UI")]),t._v(" 组件传出去(负责派发动作"),n("code",[t._v("dispatch")]),t._v("方法)")])]),t._v(" "),n("p",[t._v("所以,"),n("code",[t._v("connect")]),t._v("的两个"),n("code",[t._v("API")]),t._v("如下所示:")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" connect "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-redux'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" VisibleTodoList "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  mapStateToProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mapDispatchToProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mergeProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  options\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TodoList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名成ContainerTodoList也是一样的")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("在上面代码中，"),n("code",[t._v("connect")]),t._v("方法接受四个参数：分别是 "),n("code",[t._v("mapStateToProps")]),t._v("和 "),n("code",[t._v("mapDispatchToProps")]),t._v(",后面两个参数 "),n("code",[t._v("mergeProps")]),t._v("，以及 "),n("code",[t._v("options")]),t._v("可以省略,这四个参数的名字可以是任意的,并不一定非得这样叫,也可以定义为 "),n("code",[t._v("mapState")]),t._v("或者 "),n("code",[t._v("mapDispatch")]),t._v(",只是这样命名,见名知意,已经是约定俗成的一个习惯")]),t._v(" "),n("p",[t._v("它们定义了"),n("code",[t._v("UI")]),t._v(" 组件的业务逻辑。前者负责输入逻辑("),n("code",[t._v("mapStateToProps")]),t._v(")，即将"),n("code",[t._v("state")]),t._v("映射到 "),n("code",[t._v("UI")]),t._v("组件的参数（"),n("code",[t._v("props")]),t._v("），后者负责输出逻辑("),n("code",[t._v("mapDispatchToProps")]),t._v(")，即将用户对 "),n("code",[t._v("UI")]),t._v("组件的操作映射成 "),n("code",[t._v("Action")])]),t._v(" "),n("p",[t._v("综归来说, "),n("code",[t._v("connect")]),t._v("做了两件事情:")]),t._v(" "),n("ul",[n("li",[t._v("把"),n("code",[t._v("store")]),t._v("上的状态转换为内层的 UI 组件(傻瓜组件)的 props")]),t._v(" "),n("li",[t._v("把内层 UI 组件(无状态组件)中的用户触发的动作转化为派送个"),n("code",[t._v("store")]),t._v("的动作,前者("),n("code",[t._v("mapStateToProps")]),t._v(")是一个内层傻瓜组件对象的输入,后者("),n("code",[t._v("mapDispatchToProps")]),t._v(")内层傻瓜组件的输出\n"),n("code",[t._v("mapStateToProps")]),t._v("与"),n("code",[t._v("mapDispatchToProps")]),t._v("的工作套路就是:把"),n("code",[t._v("Store")]),t._v("上的状态转化为内层组件的"),n("code",[t._v("props")]),t._v("，然后在组件内部通过 "),n("code",[t._v("this.props")]),t._v("的方式拿到,这是不同于之前 "),n("code",[t._v("this.state")]),t._v("的方式的,其实就是一个映射关系。")])]),t._v(" "),n("h2",{attrs:{id:"mapstatetoprops-state-ownprops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mapstatetoprops-state-ownprops"}},[t._v("#")]),t._v(" mapStateToProps(state, [ownProps])")]),t._v(" "),n("p",[n("code",[t._v("mapStateToProps")]),t._v("是一个函数。见名思义,它是建立一个从（外部的）"),n("code",[t._v("state")]),t._v("对象到（"),n("code",[t._v("UI")]),t._v(" 组件的）"),n("code",[t._v("props")]),t._v("对象的映射关系。")]),t._v(" "),n("p",[t._v("既然作为函数， "),n("code",[t._v("mapStateToProps")]),t._v("执行后应该返回一个对象，里面的每一个键值对就是一个映射")]),t._v(" "),n("p",[n("code",[t._v("mapStateToProps")]),t._v(" 接受两个参数,第一个是 "),n("code",[t._v("state")]),t._v(",第二个是 "),n("code",[t._v("ownProps")]),t._v(", "),n("code",[t._v("store")]),t._v("的 "),n("code",[t._v("state")]),t._v("和自定义的 "),n("code",[t._v("props")]),t._v("，并返回一个新的对象，这个对象会作为 "),n("code",[t._v("props")]),t._v("的一部分传入 ui 组件。")]),t._v(" "),n("p",[t._v("我们可以根据组件所需要的数据自定义返回一个对象。"),n("code",[t._v("ownProps")]),t._v("的变化也会触发 "),n("code",[t._v("mapStateToProps")]),t._v(", "),n("code",[t._v("ownProps")]),t._v("代表容器组件的 "),n("code",[t._v("props")]),t._v("对象")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mapStateToProps")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state代表的是store中state的状态")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("inputValue")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inputValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("list")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("在上面代码中， "),n("code",[t._v("mapStateToProps")]),t._v("是一个函数，它接受"),n("code",[t._v("state")]),t._v("作为参数，并且第一个参数就是 "),n("code",[t._v("state")]),t._v(", 它返回一个对象。这个对象有 "),n("code",[t._v("inputValue")]),t._v("和 "),n("code",[t._v("list")]),t._v("属性，它代表着 "),n("code",[t._v("UI")]),t._v(" 组件的同名参数，后面的 "),n("code",[t._v("state.inputValue")]),t._v("，以及 "),n("code",[t._v("state.list")]),t._v("就是从 "),n("code",[t._v("Store")]),t._v("中的 "),n("code",[t._v("state")]),t._v("的拿到内部组件输入框的值和底下列表的值")]),t._v(" "),n("p",[n("code",[t._v("mapStateToProps")]),t._v("会订阅 "),n("code",[t._v("Store")]),t._v("，每当 "),n("code",[t._v("state")]),t._v("更新的时候，就会自动执行，重新计算 UI 组件的参数，从而触发 UI 组件的重新渲染。")]),t._v(" "),n("h2",{attrs:{id:"mapdispatchtoprops-dispatch-ownprops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mapdispatchtoprops-dispatch-ownprops"}},[t._v("#")]),t._v(" mapDispatchToProps(dispatch,[ownProps])")]),t._v(" "),n("p",[n("code",[t._v("mapDispatchToProps")]),t._v("是 "),n("code",[t._v("connect")]),t._v("函数的第二个参数，它是用来建立 "),n("code",[t._v("UI")]),t._v(" 组件的参数到 "),n("code",[t._v("store.dispatch")]),t._v("方法的映射。")]),t._v(" "),n("p",[t._v("换句话说，它定义了哪些用户的操作应该当作 "),n("code",[t._v("Action")]),t._v("，传给 "),n("code",[t._v("Store")]),t._v("。它可以是一个函数，也可以是一个对象。\n如果 "),n("code",[t._v("mapDispatchToProps")]),t._v("是一个函数，会得到 "),n("code",[t._v("dispatch")]),t._v("和 "),n("code",[t._v("ownProps")]),t._v("（容器组件的"),n("code",[t._v("props")]),t._v("对象）两个参数")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mapDispatchToProps")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dispatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ownProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleInputChange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handle_input_change'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAddContent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handle_add_content'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleDeleteList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handle_delete_list'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br")])]),n("p",[t._v("从上面代码可以看到，"),n("code",[t._v("mapDispatchToProps")]),t._v("作为函数，应该返回一个对象，该对象的每个键值对都是一个映射，定义了 "),n("code",[t._v("UI")]),t._v(" 组件的参数怎样发出 "),n("code",[t._v("Action")]),t._v("。")]),t._v(" "),n("p",[t._v("如果 "),n("code",[t._v("mapDispatchToProps")]),t._v("是一个对象，那么会和 "),n("code",[t._v("store")]),t._v("绑定作为 "),n("code",[t._v("props")]),t._v("的一部分传入"),n("code",[t._v("ui")]),t._v("组件,它的每个键名也是对应 "),n("code",[t._v("UI")]),t._v(" 组件的同名参数,键值应该是一个函数，会被当作 "),n("code",[t._v("Action creator")]),t._v("，返回的 "),n("code",[t._v("Action")]),t._v("会由 "),n("code",[t._v("Redux")]),t._v(" 自动发出。举例来说，上面的 "),n("code",[t._v("mapDispatchToProps")]),t._v("写成对象,则如下所示:下面的函数是 Es6 的简写形式")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mapDispatchTopProps "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleInputChange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于handleInputChange: function(e){ ...}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handle_input_change'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAddContent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handle_add_content'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleDeleteList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" action "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handle_delete_list'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br")])]),n("p",[t._v("不论 "),n("code",[t._v("mapDispatchToProps")]),t._v("是对象还是函数，它最终都会返回一个对象，如果是函数，这个对象的 "),n("code",[t._v("key")]),t._v("值是可以自定义的")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapDispatchToProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("attrActions")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bindActionCreators")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("todoActionCreators"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dispatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bindActionCreators是Redux的一个方法,会将action和dispatch绑定并返回一个对象，这个对象会和ownProps一起作为props的一部分传入ui组件")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[n("code",[t._v("mapDispatchToProps")]),t._v("返回的对象其属性其实就是一个个 "),n("code",[t._v("actionCreator")]),t._v("，因为已经和 "),n("code",[t._v("dispatch")]),t._v("绑定，所以当调用 "),n("code",[t._v("actionCreator")]),t._v("时会立即发送"),n("code",[t._v("action")]),t._v("，而不用手动"),n("code",[t._v("dispatch")])]),t._v(" "),n("p",[n("code",[t._v("mapStateToProps")]),t._v("和 "),n("code",[t._v("mapDispatchToProps")]),t._v("都可以包含第二个参数 "),n("code",[t._v("ownProps")]),t._v(","),n("code",[t._v("ownProps")]),t._v("的变化也会触发 "),n("code",[t._v("mapDispatchToProps")])]),t._v(" "),n("h2",{attrs:{id:"mergeprops-stateprops-dispatchprops-ownprops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mergeprops-stateprops-dispatchprops-ownprops"}},[t._v("#")]),t._v(" mergeProps(stateProps, dispatchProps, ownProps)")]),t._v(" "),n("p",[n("strong",[t._v("作用")]),t._v(":它是 "),n("code",[t._v("connect")]),t._v("函数的第三个参数,将 "),n("code",[t._v("mapStateToProps()")]),t._v("与 "),n("code",[t._v("mapDispatchToProps()")]),t._v("返回的对象和组件自身的 "),n("code",[t._v("props")]),t._v("合并成新的 "),n("code",[t._v("props")]),t._v("并传入组件。默认返回 "),n("code",[t._v("Object.assign({}, ownProps, stateProps, dispatchProps)")]),t._v("的结果")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mergeProps")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ownProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stateProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dispatchProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("h2",{attrs:{id:"options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" options")]),t._v(" "),n("p",[t._v("当 "),n("code",[t._v("pure = true")]),t._v("表示 "),n("code",[t._v("connect")]),t._v("容器组件将在 "),n("code",[t._v("shouldComponentUpdate")]),t._v("中对 "),n("code",[t._v("store")]),t._v("的 "),n("code",[t._v("state")]),t._v("和"),n("code",[t._v("ownProps")]),t._v("进行浅对比，判断是否发生变化，优化性能。若为"),n("code",[t._v("false")]),t._v("则不对比")]),t._v(" "),n("p",[t._v("这个"),n("code",[t._v("options")]),t._v("有很多,具体可以参考 "),n("code",[t._v("react-redux")]),t._v("官方文档")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  context"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  pure"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  areStatesEqual"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  areOwnPropsEqual"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  areStatePropsEqual"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  areMergedPropsEqual"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  forwardRef"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h2",{attrs:{id:"结语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),n("p",[t._v("本文主要学习了如何使用 react-redux,使用 react-redux 只是为了简化 Redux 的,不使用 react-redux 也没有问题,只是使用 react-redux 可以更简便的管理我们的状态,更好的组织我们的代码")]),t._v(" "),n("p",[t._v("但是随之而来的就是学习成本,得学习那些 Provider, connect 等 API 的使用,这也是为什么这些框架令人蛋疼的原因,本以为学了 React 能搞事,但发现依旧还有一座山在等着你")]),t._v(" "),n("p",[t._v("什么解决异步问题 react-thunk,react-saga 等中间件,middleWare,路由 react-router 等")]),t._v(" "),n("p",[t._v("当然最新版本的 React 中已经有了 React hooks,有了这个你可以替代 Redux,或者 react-redux,但是笔者认为,技术没有金弹或者银弹,适合业务的技术才是最好的\n理解 redux 以及 react-redux 不妨也是一种技术选择,更好的与 React hooks 做比较,从而选择一个最适宜的.")]),t._v(" "),n("p",[t._v("React 很多东西很抽象 学习起来,就有些费劲~以后也会循序渐进,一一进行分享的\n最后,看完本节:记住几点")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Provider")]),t._v("是一个由"),n("code",[t._v("react-redux")]),t._v("提供的组件,用于接收 store 的数据,供内部组件暴露的一个接口")]),t._v(" "),n("li",[t._v("connect 是 react-redux 库提供的一个函数,用于连接 UI 组件的,并且最终生成一个容器组件,提供了一些映射方法,mapStateToProps 以及 mapDispatchToProps\n在"),n("code",[t._v("UI")]),t._v("组件内部的数据通过"),n("code",[t._v("this.props")]),t._v("来填充渲染")])]),t._v(" "),n("footer-FooterLink",{attrs:{isShareLink:!0,isDaShang:!0}}),t._v(" "),n("footer-FeedBack")],1)}),[],!1,null,null,null);s.default=e.exports}}]);