(window.webpackJsonp=window.webpackJsonp||[]).push([[459],{2224:function(v,_,t){"use strict";t.r(_);var e=t(9),a=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"前后端开发接口联调对接参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前后端开发接口联调对接参数"}},[v._v("#")]),v._v(" 前后端开发接口联调对接参数")]),v._v(" "),_("h2",{attrs:{id:"快速导航"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#快速导航"}},[v._v("#")]),v._v(" 快速导航")]),v._v(" "),_("TOC"),v._v(" "),_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),_("p",[v._v("一个完整的互联网系统项目,需要前后端配合,进行上线,针对前端开发者,现在互联网主流的项目都是前后端分离")]),v._v(" "),_("p",[v._v("也就是后端负责提供数据接口,前端负责UI界面数据渲染")]),v._v(" "),_("p",[v._v("凡是在前台数据展示与用户交互的,都是由前端来实现的,而数据来源是由后台服务提供的")]),v._v(" "),_("p",[v._v("在浏览器"),_("code",[v._v("c")]),v._v("端能够发送后端可识别的"),_("code",[v._v("http")]),v._v("参数请求,后台服务接收响应,并能够返回具体的数据给浏览器前端,最终在浏览器端完成数据的展示,渲染")]),v._v(" "),_("p",[v._v("一个完整的前端,不仅仅是完成编写UI界面,还需要对接后端接口,完成数据的逻辑处理的")]),v._v(" "),_("p",[v._v("那前端一般怎么去跟后端去对接,接口字段,参数,对于刚入行的新手前端,是有一些懵逼的,有的时候,就是这样,后端讲到一些东西,比如:什么高并发,什么服务端,客户端,浏览器端")]),v._v(" "),_("p",[v._v("有些专业术语,是需要知道的,不然就很难沟通,协作的,一个前端只写静态页面的,不做数据交互,不是一个合格的前端的,尤其是一些前端机构培训出来的,只教学生写页面,但是数据交互这块却很少提,一旦去工作,发现自己会的那点东西真的是小巫见大巫的,准确得来说,就是干不了活,干到一半,还需要别人提供帮助")]),v._v(" "),_("h2",{attrs:{id:"客户端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[v._v("#")]),v._v(" 客户端")]),v._v(" "),_("p",[v._v("负责获取和消费资源的电脑,比如:浏览器,Exe程序,能够下载获取数据的地方,能够向服务器端发送请求数据")]),v._v(" "),_("h2",{attrs:{id:"服务端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务端"}},[v._v("#")]),v._v(" 服务端")]),v._v(" "),_("p",[v._v("负责解析处理数据，接收客户端发来的资源请求,并能够进行响应,按照客户端约定的数据格式(xml,JSON)等,把指定的资源(文本,图片,视频)等返回给客户端")]),v._v(" "),_("p",[v._v("无论我们是在网页端还是在App端,都是通过请求,处理，响应的方式从服务器端获取回来的")]),v._v(" "),_("h2",{attrs:{id:"接口请求方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口请求方式"}},[v._v("#")]),v._v(" 接口请求方式")]),v._v(" "),_("p",[v._v("客户端向服务端发送请求数据时,一般常见的有两种:"),_("code",[v._v("get")]),v._v("和"),_("code",[v._v("post")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("get")]),v._v(":常用于获取服务器的资源,比如:更具url地止,从服务器获取"),_("code",[v._v("html文件")]),v._v(","),_("code",[v._v("css文件")]),v._v(","),_("code",[v._v("图片文件")]),v._v("等")]),v._v(" "),_("li",[_("code",[v._v("post")]),v._v(":通常用于向服务器提交资源,也就是网服务器里发送资源,比如：新用户注册,表单提交,需要收集用户输入数据等")])]),v._v(" "),_("h2",{attrs:{id:"url地止"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#url地止"}},[v._v("#")]),v._v(" URL地止")]),v._v(" "),_("p",[v._v("URL专业点交统一资源定位符,用于标识互联网上每个资源的唯一存放位置,浏览器只有通过URL地止,才能正确定位资源的存放位置,从而成功访问到对应的资源")]),v._v(" "),_("ul",[_("li",[v._v("第一部分:客户端与服务器之间的通信协议(http/https)")]),v._v(" "),_("li",[v._v("第二部分:存在该资源的服务器名称(网站域名:如video.itclan.net)")]),v._v(" "),_("li",[v._v("第三部门: 资源在服务器上具体存放的位置(/后面的内容)")])]),v._v(" "),_("h2",{attrs:{id:"url编码与解码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#url编码与解码"}},[v._v("#")]),v._v(" URL编码与解码")]),v._v(" "),_("p",[v._v("URL地止中,只允许出现英文相关的字目,什么中文字符,它是识别不了的,需要将中文字符进行编码,转义")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("encodeURL()")]),v._v(":将对汉语等特殊字符进行编码")]),v._v(" "),_("li",[_("code",[v._v("encodeURIComponent")]),v._v(":用来encodeURL中想要传输的字符串,他会对所有的Url敏感字符进行encode")]),v._v(" "),_("li",[_("code",[v._v("decodeURL()")]),v._v(":解码函数,对上面两个函数输出的字符进行反向解码")]),v._v(" "),_("li",[_("code",[v._v("decodeURIComponent")]),v._v(":同上解码函数")])]),v._v(" "),_("h2",{attrs:{id:"接口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[v._v("#")]),v._v(" 接口")]),v._v(" "),_("p",[v._v("后端同学提到的接口,其实就是URL,对接口,其实也就是需要前后端约定,接口参数,一般后端同学它是知道的,而且也是它定义的,当然前端定义也没有问题")]),v._v(" "),_("p",[v._v("使用"),_("code",[v._v("Ajax")]),v._v("请求数据时,被请求的URL地止,就叫做接口地止,就是给前端提供数据的,简称接口")]),v._v(" "),_("p",[v._v("每个接口都必须要有请求方式,也就是确定是"),_("code",[v._v("get")]),v._v("请求还是"),_("code",[v._v("post")]),v._v("请求")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("通过"),_("code",[v._v("get")]),v._v("方式请求接口,在网页中通过"),_("code",[v._v("axios")]),v._v("或"),_("code",[v._v("request")]),v._v("或"),_("code",[v._v("jQ")]),v._v("发起的"),_("code",[v._v("get")]),v._v("请求数据,然后服务器端处理请求,并响应返回约定的数据格式,到网页中,返回给前端利用前端技术进行渲染,解析")])]),v._v(" "),_("li",[_("p",[v._v("通过"),_("code",[v._v("post")]),v._v("方式请求接口")])])]),v._v(" "),_("p",[v._v("用户在网页中的Ajax发起"),_("code",[v._v("post")]),v._v("数据请求,服务器处理后响应给前端")]),v._v(" "),_("h3",{attrs:{id:"接口文档"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口文档"}},[v._v("#")]),v._v(" 接口文档")]),v._v(" "),_("p",[v._v("接口说明文档,是前端调接口的依据,一个好的接口文档包含了对接口的url,参数以及输出内容的说明，对照接口文档就能知道接口具体的作用,以及接口如何进行调用")]),v._v(" "),_("ul",[_("li",[v._v("接口名称:用来标识各个接口字段的简单说明,比如:登录,注册,获取列表信息")]),v._v(" "),_("li",[v._v("接口URL:接口的调用地止")]),v._v(" "),_("li",[v._v("接口调用方式:如:get/post")]),v._v(" "),_("li",[v._v("参数格式:接口需要传递的参数,每个参数必须包含的参数名称,参数类型,是否必传,参数说明")]),v._v(" "),_("li",[v._v("响应格式:接口的返回值详细描述,一般包含数据名称,数据类型,说明")]),v._v(" "),_("li",[v._v("返回示例(可选):通过对象的形式,列出服务器返回的数据接口结构")])]),v._v(" "),_("p",[v._v("对于初学者,只写静态页,却不写交互,对接口的前端,肯定是不行的,也有的前端,没有对接过后台接口,刚开始都是很懵逼的状态,你会发现后端把接口文档给你")]),v._v(" "),_("p",[v._v("你就不知道怎么办了的,怎么看接口文档的,解决这个问题,就是多做项目,项目做多了的,就知道怎么处理了的,多参与一些大型项目")]),v._v(" "),_("footer-FooterLink",{attrs:{isShareLink:!1,isDaShang:!0}}),v._v(" "),_("footer-FeedBack")],1)}),[],!1,null,null,null);_.default=a.exports}}]);